{
  "openapi": "3.0.0",
  "info": {
    "title": "AuxVault API",
    "description": "The AuxVault API is a RESTful API that allows you to process financial transactions, manage customers, and access transaction data securely.",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://dev-api.auxvault.net/api/v1/public",
      "description": "Sandbox Environment"
    },
    {
      "url": "https://api.auxvault.net/api/v1/public",
      "description": "Production Environment"
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "paths": {
    "/transaction": {
      "post": {
        "summary": "Card Transaction",
        "description": "Process a credit card or ACH payment.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Amount": {"type": "number", "example": 10.50},
                  "BillingAddress": {"type": "string", "example": "123 Main St"},
                  "BillingCity": {"type": "string", "example": "Anytown"},
                  "BillingCountry": {"type": "string", "example": "USA"},
                  "BillingCountryCode": {"type": "string", "example": "+1"},
                  "BillingCustomerName": {"type": "string", "example": "John Doe"},
                  "BillingEmail": {"type": "string", "example": "john.doe@example.com"},
                  "BillingPhoneNumber": {"type": "string", "example": "555-123-4567"},
                  "BillingPostalCode": {"type": "string", "example": "12345"},
                  "BillingState": {"type": "string", "example": "CA"},
                  "ShippingSameAsBilling": {"type": "boolean"},
                  "ShippingCustomerName": {"type": "string"},
                  "ShippingEmail": {"type": "string"},
                  "ShippingPhoneNumber": {"type": "string"},
                  "ShippingAddress": {"type": "string"},
                  "ShippingCountry": {"type": "string"},
                  "ShippingCity": {"type": "string"},
                  "ShippingState": {"type": "string"},
                  "ShippingPostalCode": {"type": "string"},
                  "CardNumber": {"type": "string", "example": "4111111111111111"},
                  "Cvv": {"type": "string", "example": "123"},
                  "ExpiryDate": {"type": "string", "example": "1225"},
                  "SuggestedMode": {"type": "string", "example": "Card"},
                  "ConvenienceFeeActive": {"type": "boolean"},
                  "TransactionType": {"type": "string", "description": "1 for Sale, 2 for Auth"},
                  "PaymentTokenization": {"type": "boolean"},
                  "IpAddress": {"type": "string", "example": "192.168.1.1"}
                },
                "required": ["Amount", "BillingCountry", "BillingCountryCode", "BillingCustomerName", "BillingEmail", "BillingPhoneNumber", "BillingPostalCode", "CardNumber", "Cvv", "ExpiryDate", "SuggestedMode", "ConvenienceFeeActive", "IpAddress"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "example": {
                  "status": "success",
                  "status_code": 100,
                  "message": "Transaction Processed Successfully",
                  "data": {
                    "TransactionId": "d0snjfv0i479rlkc66v0",
                    "BaseAmount": 10,
                    "Amount": 10,
                    "CardNumber": "1111",
                    "BillingEmail": "federico@gmail.com",
                    "BillingCustomerName": "Federico",
                    "BillingAddress": "",
                    "BillingCity": "",
                    "BillingState": null,
                    "BillingPostalCode": "",
                    "BillingCountry": 1,
                    "BillingCountryCode": "+1",
                    "BillingPhoneNumber": "876543200",
                    "TransactionType": 1,
                    "Status": "1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 400,
                  "msg": "bad request error: invalid Postal Code"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 401,
                  "msg": "Unauthorized: Invalid API Key"
                }
              }
            }
          }
        }
      }
    },
    "/transaction-list": {
      "get": {
        "summary": "Transaction List",
        "description": "Retrieve a list of transactions.",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 200,
                  "message": "Transactions found successfully",
                  "data": [
                    {
                      "TransactionId": "d0snjfv0i479rlkc66v0",
                      "BaseAmount": 10,
                      "Amount": 10,
                      "CardNumber": "1111",
                      "BillingEmail": "federico@gmail.com",
                      "BillingCustomerName": "Federico",
                      "BillingAddress": "",
                      "BillingCity": "",
                      "BillingState": null,
                      "BillingPostalCode": "",
                      "BillingCountry": 1,
                      "BillingCountryCode": "+1",
                      "BillingPhoneNumber": "876543200",
                      "TransactionType": 1,
                      "Status": "1"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 400,
                  "msg": "bad request error: invalid parameters"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 401,
                  "msg": "Unauthorized: Invalid API Key"
                }
              }
            }
          }
        }
      }
    },
    "/transaction/{id}": {
      "get": {
        "summary": "Transaction Details",
        "description": "Retrieve the details of a specific transaction.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 200,
                  "message": "Transaction Details found successfully",
                  "data": {
                    "TransactionId": "d0snjfv0i479rlkc66v0",
                    "BaseAmount": 10,
                    "Amount": 10,
                    "CardNumber": "1111",
                    "BillingEmail": "federico@gmail.com",
                    "BillingCustomerName": "Federico",
                    "BillingAddress": "",
                    "BillingCity": "",
                    "BillingState": null,
                    "BillingPostalCode": "",
                    "BillingCountry": 1,
                    "BillingCountryCode": "+1",
                    "BillingPhoneNumber": "876543200",
                    "TransactionType": 1,
                    "Status": "1"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 401,
                  "msg": "Unauthorized: Invalid API Key"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 404,
                  "msg": "Transaction not found"
                }
              }
            }
          }
        }
      }
    },
    "/void": {
      "post": {
        "summary": "Void Transaction",
        "description": "Void a previously authorized transaction.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "TransactionId": {"type": "string"},
                  "TransactionFor": {"type": "string", "example": "Void"},
                  "Reason": {"type": "string"}
                },
                "required": ["TransactionId", "TransactionFor"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "example": {
                  "status": "success",
                  "status_code": 100,
                  "message": "Transaction Voided Successfully",
                  "data": {
                    "TransactionId": "d0snjfv0i479rlkc66v0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 400,
                  "msg": "bad request error: invalid transaction id"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 401,
                  "msg": "Unauthorized: Invalid API Key"
                }
              }
            }
          }
        }
      }
    },
    "/refund": {
      "post": {
        "summary": "Refund Transaction",
        "description": "Process a full or partial refund for a settled transaction.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "TransactionId": {"type": "string"},
                  "TransactionFor": {"type": "string", "enum": ["FullRefund", "PartialRefund"]},
                  "Amount": {"type": "number"},
                  "Reason": {"type": "string"}
                },
                "required": ["TransactionId", "TransactionFor", "Amount"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "example": {
                  "status": "success",
                  "status_code": 100,
                  "message": "Transaction Refunded Successfully",
                  "data": {
                    "TransactionId": "d0snjfv0i479rlkc66v0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 400,
                  "msg": "bad request error: invalid amount"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 401,
                  "msg": "Unauthorized: Invalid API Key"
                }
              }
            }
          }
        }
      }
    },
    "/token-transaction": {
      "post": {
        "summary": "Token Transaction",
        "description": "Process a transaction using a token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "TokenId": {"type": "string"},
                  "GatewayCustomerId": {"type": "string"},
                  "Amount": {"type": "number"},
                  "ConvenienceFeeActive": {"type": "boolean"},
                  "Description": {"type": "string"},
                  "ReferenceNo": {"type": "string"}
                },
                "required": ["TokenId", "GatewayCustomerId", "Amount", "ConvenienceFeeActive"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "example": {
                  "status": "success",
                  "status_code": 100,
                  "message": "Transaction Processed Successfully",
                  "data": {
                    "TransactionId": "d0snjfv0i479rlkc66v0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 400,
                  "msg": "bad request error: invalid token"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 401,
                  "msg": "Unauthorized: Invalid API Key"
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "post": {
        "summary": "Customer List",
        "description": "Retrieve a list of customers.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "search": {"type": "string"},
                  "sort": {"type": "string", "enum": ["asc", "desc"]},
                  "page": {"type": "integer"},
                  "perPage": {"type": "integer"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 200,
                  "message": "Customers found successfully",
                  "data": [
                    {
                      "CustomerId": "cust_123",
                      "CustomerName": "John Doe",
                      "Email": "john.doe@example.com"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 401,
                  "msg": "Unauthorized: Invalid API Key"
                }
              }
            }
          }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "summary": "Customer Details",
        "description": "Retrieve the details of a specific customer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 200,
                  "message": "Customer Details found successfully",
                  "data": {
                    "CustomerId": "cust_123",
                    "CustomerName": "John Doe",
                    "Email": "john.doe@example.com",
                    "PhoneNumber": "555-123-4567",
                    "CountryId": 1,
                    "CountryCode": "+1",
                    "Address": "123 Main St",
                    "City": "Anytown",
                    "PostalCode": "12345",
                    "StateId": 12
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 401,
                  "msg": "Unauthorized: Invalid API Key"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "status_code": 404,
                  "msg": "Customer not found"
                }
              }
            }
          }
        }
      }
    }
  }
}
